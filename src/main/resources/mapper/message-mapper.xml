<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiangkai.community.mapper.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversationsByUserId" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE id IN
        (
            SELECT MAX(id)
            FROM message
            WHERE from_id != 1
            AND status !=2
            AND (from_id=#{userId} OR to_id=#{userId})
            GROUP BY conversation_id
        )
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectConversationCountByUserId" resultType="int">
        SELECT COUNT(m.maxId)
        FROM (
            SELECT MAX(id) as maxId
            FROM message
            WHERE from_id != 1
            AND status !=2
            AND (from_id=#{userId} OR to_id=#{userId})
            GROUP BY conversation_id
        ) as m
    </select>

    <select id="selectLetterByConversationId" resultType="Message">
        SELECT <include refid="selectFields"></include>
        FROM message
        WHERE conversation_id = #{conversationId}
        AND from_id != 1
        AND `status` != 2
        ORDER BY create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectLetterCountByConversationId" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE conversation_id = #{conversationId}
        AND from_id != 1
        AND `status` != 2
    </select>

    <select id="selectUnreadLetterCountByUserId" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE to_id = #{userId}
        <if test="conversationId != null">
            AND conversation_id = #{conversationId}
        </if>
        AND from_id != 1
        AND `status`=0
    </select>

    <insert id="insertMessage" keyProperty="id">
        insert into message (<include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message
        set status= #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            select max(id)
            from message
            where conversation_id=#{topic}
            and from_id=1
            and to_id=#{userId}
            and status!=2
        )
    </select>

    <select id="selectUnreadNoticeCount" resultType="int">
        select count(id)
        from message
        where to_id=#{userId}
        <if test="topic != null">
            and conversation_id=#{topic}
        </if>
        and from_id=1
        and status=0
    </select>

    <select id="selectTotalNoticeCount" resultType="int">
        select count(id)
        from message
        where to_id=#{userId}
        and conversation_id=#{topic}
        and from_id=1
        and status!=2
    </select>

    <select id="selectNotices" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where to_id=#{userId}
        and conversation_id=#{topic}
        and from_id=1
        and status!=2
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

</mapper>